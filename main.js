var app = angular.module('app', []);


app.controller('firstController', function($scope, myFactory){
     console.log('firstController');
    $scope.myFactory = myFactory;
    
    //$scope.hello = "Hello world firstController";
 
    
});

app.controller('secondController', function($scope, myFactory){
    console.log('secondController');
    $scope.myFactory = myFactory;
    
  // $scope.hello = "Hello world secondController";

    
});


app.factory('myFactory', function(){
    
    return {
        hello: "hello world"
    };
    
});


// Как шарить данные между двумя контролерами?
// Для этого создадим два контроллера с моделями hello
// Они абсолютно разные и два разных scope в которых написано Hello world. Но мы хотим сделать так чтобы данные обновлялись одновременно в обоих контроллерах
// Очень часто возникает такая ситуация когда необходимо чтобы одни и те же данные были в обоих контроллерах
// Для этого используется такая вещь как ФАБРИКА - т.е. это сущность(по сути функция) которая хранит в себе данные которые можно использовать в нескольких контроллерах
// Как её сделать?
// Так же как мы описывали контроллеры мы создаем factory называем ее например myFactory, при этом фабрика должна что-то возвращать!!!!
// В данном случае будем возвращать объект у которого одно проперти hello которое равно в нашем случае строке "hello world"
// Для того чтобы использовать фабрику её надо сначала подмешать!!! Для этого в function каждого контролера после $scope передаем второй параметр myFactory и теперь еще 
// Добавим в тело функции каждого контроллера строки $scope.myFactory = myFactory; 
// Зачем мы это делаем?
// Сейчас переменная доступна внутри контроллера, чтобы она была доступна внутри шаблона мы должны её занести в $scope
// Что это нам дает?
// Теперь в любом шаблоне мы може заменить ng-model = "hello" на ng-model = "myFactory.hello", так как мы знаем что myFactory доступна в шаблоне.
// Как мы видим теперь первая и вторая  model ссылаются на одну и ту же factory и на одни и теже данные myFactory.hello. Давайте запистим браузер.  
